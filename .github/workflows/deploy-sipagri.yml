name: ðŸš€ Build and Deploy SipAGRI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # EmpÃªche le dÃ©ploiement concurrent sur le mÃªme serveur
    concurrency: 
      group: production-deploy
      cancel-in-progress: false

    steps:
      # Ã‰tape 1: RÃ©cupÃ©rer le code
      - name: Checkout code
        uses: actions/checkout@v4

      # Ã‰tape 2: Configurer Java et Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      # Ã‰tape 3: Builder le projet avec Maven (cela crÃ©e le fichier JAR dans target/)
      - name: Build with Maven
        run: mvn -B -X package --file pom.xml
        # L'option -B est pour le mode batch (non interactif)

      # Ã‰tape 4: DÃ©ployer le JAR sur le serveur Windows via SCP/SSH
      - name: Deploy to Windows Server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          source: "target/*.jar"
          target: ${{ secrets.SERVER_JAR_PATH }}
          # 'strip_components' retire le dossier 'target/' du chemin
          strip_components: 1 

      # Ã‰tape 5: RedÃ©marrer le service Windows avec NSSM
      - name: Restart Windows Service
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            # ArrÃªter le service NSSM
            nssm stop "${{ secrets.NSSM_SERVICE_NAME }}"
            # Attendre un peu pour Ãªtre sÃ»r qu'il soit bien arrÃªtÃ©
            Start-Sleep -Seconds 5
            # RedÃ©marrer le service NSSM
            nssm start "${{ secrets.NSSM_SERVICE_NAME }}"
            # VÃ©rifier le statut du service
            nssm status "${{ secrets.NSSM_SERVICE_NAME }}"
