name: üöÄ Build and Deploy SipAGRI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    concurrency:
      group: production-deploy
      cancel-in-progress: false

    steps:
      # √âtape 1: R√©cup√©rer le code
      - name: Checkout code
        uses: actions/checkout@v4

      # √âtape 2: Configurer Java et Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.9.9

      # √âtape 3: Builder le projet avec Maven (AVEC profil prod et skip des tests d'int√©gration)
      - name: Build with Maven
        run: |
          mvn clean package -Pprod
        env:
          # Variables d'environnement pour les tests
          SPRING_PROFILES_ACTIVE: test

      # Alternative si vous voulez garder les tests unitaires mais skip les tests d'int√©gration
      # - name: Build with Maven (alternative)
      #   run: |
      #     mvn clean package -Pprod -DskipITs=true -Dspring.profiles.active=test

      # √âtape 4: D√©ployer le JAR (localement sur le serveur Windows)
      - name: Deploy JAR locally
        shell: powershell
        run: |
          try {
              # Chemins (issus de tes secrets)
              $DEPLOY_DIR   = "${{ secrets.SERVER_JAR_PATH }}"
              $ARCHIVE_DIR  = "$DEPLOY_DIR\MAJ"
              $SERVICE_NAME = "${{ secrets.NSSM_SERVICE_NAME }}"
              $DATE         = Get-Date -Format "yyyy.MM.dd"
              $TODAY_ARCHIVE = "$ARCHIVE_DIR\$DATE"

              Write-Output "Creation des dossiers d'archive..."
              New-Item -ItemType Directory -Path $TODAY_ARCHIVE -Force -ErrorAction SilentlyContinue

              Write-Output "Arret du service $SERVICE_NAME..."
              C:\nssm\win64\nssm.exe stop $SERVICE_NAME
              Start-Sleep -Seconds 5

              Write-Output "Archivage des anciens JAR..."
              $OLD_JARS = Get-ChildItem -Path $DEPLOY_DIR -Filter "*.jar" -ErrorAction SilentlyContinue
              foreach ($JAR in $OLD_JARS) {
                  Move-Item -Path $JAR.FullName -Destination "$TODAY_ARCHIVE\$($JAR.Name)" -Force
              }
          
              Write-Output "Deploiement de l'environement'"
              $NEW_ENV = Get-ChildItem -Path ".env" | Select-Object -First 1
              if ($NEW_ENV) {
                  Copy-Item -Path $NEW_ENV.FullName -Destination $DEPLOY_DIR -Force
                  Write-Output "Deploye: $($NEW_ENV.Name) -> $DEPLOY_DIR"
              } else {
                  throw "Aucun fichier .ENV trouve"
              }

              Write-Output "Deploiement de la nouvelle version..."
              $NEW_JAR = Get-ChildItem -Path "target\*.jar" | Select-Object -First 1
              if ($NEW_JAR) {
                  Copy-Item -Path $NEW_JAR.FullName -Destination $DEPLOY_DIR -Force
                  Write-Output "Deploye: $($NEW_JAR.Name) -> $DEPLOY_DIR"
              } else {
                  throw "Aucun fichier JAR trouve dans target/"
              }

              Write-Output "Demarrage du service $SERVICE_NAME..."
              C:\nssm\win64\nssm.exe start $SERVICE_NAME
              Start-Sleep -Seconds 2

              Write-Output "Statut du service:"
              C:\nssm\win64\nssm.exe status $SERVICE_NAME

              Write-Output "`nD√©ploiement termin√© avec succes!"
          }
          catch {
              Write-Output "Erreur lors du d√©ploiement: $($_.Exception.Message)"
              exit 1
          }